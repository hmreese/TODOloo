{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/GitHub/react-first-app/src/MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n\n  function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index;\n    });\n    console.log(\"wow\");\n    deleteid(updated).then(result => {\n      if (result) setCharacters(updated);\n    });\n  }\n\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:5000/users', person);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function deleteid(id) {\n    try {\n      const response = await axios.delete('http://localhost:5000/users/'.concat(id));\n      return response.data;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  function updateList(person) {\n    makePostCall(person).then(result => {\n      if (result) setCharacters([...characters, person]);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/michael/Documents/GitHub/react-first-app/src/MyApp.js"],"names":["React","useState","useEffect","Table","Form","axios","MyApp","characters","setCharacters","removeOneCharacter","index","updated","filter","character","i","console","log","deleteid","then","result","fetchAll","makePostCall","person","response","post","data","error","get","users_list","id","delete","concat","updateList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAKA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASQ,kBAAT,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,OAAO,GAAGJ,UAAU,CAACK,MAAX,CAAkB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAClD,aAAOA,CAAC,KAAKJ,KAAb;AACD,KAFe,CAAhB;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,IAAAA,QAAQ,CAACN,OAAD,CAAR,CAAkBO,IAAlB,CAAuBC,MAAM,IAAI;AAC/B,UAAGA,MAAH,EACEX,aAAa,CAACG,OAAD,CAAb;AACH,KAHD;AAKD;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,GAAGF,IAAX,CAAiBC,MAAM,IAAI;AACzB,UAAIA,MAAJ,EACEX,aAAa,CAACW,MAAD,CAAb;AACH,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,iBAAeE,YAAf,CAA4BC,MAA5B,EAAmC;AACjC,QAAI;AACD,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0CF,MAA1C,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACF,KAHD,CAIA,OAAOC,KAAP,EAAc;AACXX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAO,KAAP;AACF;AACF;;AAED,iBAAeN,QAAf,GAAyB;AACvB,QAAI;AACD,YAAMG,QAAQ,GAAG,MAAMlB,KAAK,CAACsB,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAOJ,QAAQ,CAACE,IAAT,CAAcG,UAArB;AACF,KAHD,CAIA,OAAOF,KAAP,EAAa;AACV;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAO,KAAP;AACF;AACH;;AAEA,iBAAeT,QAAf,CAAwBY,EAAxB,EAA2B;AACzB,QAAI;AAEF,YAAMN,QAAQ,GAAG,MAAMlB,KAAK,CAACyB,MAAN,CAAa,+BAA+BC,MAA/B,CAAsCF,EAAtC,CAAb,CAAvB;AACA,aAAON,QAAQ,CAACE,IAAhB;AACD,KAJD,CAKA,OAAOC,KAAP,EAAa;AACX;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAO,KAAP;AACD;AACF;;AAEF,WAASM,UAAT,CAAoBV,MAApB,EAA4B;AAC3BD,IAAAA,YAAY,CAACC,MAAD,CAAZ,CAAqBJ,IAArB,CAA2BC,MAAM,IAAI;AACrC,UAAIA,MAAJ,EACGX,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBe,MAAhB,CAAD,CAAb;AACF,KAHD;AAID;;AAGC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEf,UAAtB;AAAkC,MAAA,eAAe,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEuB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxEQ1B,K;;KAAAA,K;AA2ET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\n\n\n\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\n\n  function removeOneCharacter (index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index\n    });\n    console.log(\"wow\")\n    deleteid(updated).then(result => {\n      if(result)\n        setCharacters(updated);\n    });\n\n  }\n\n  useEffect(() => {\n    fetchAll().then( result => {\n      if (result)\n        setCharacters(result);\n    });\n  }, [] );\n\n  async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:5000/users', person);\n       return response.data;\n    }\n    catch (error) {\n       console.log(error);\n       return false;\n    }\n  }\n\n  async function fetchAll(){\n    try {\n       const response = await axios.get('http://localhost:5000/users');\n       return response.data.users_list;\n    }\n    catch (error){\n       //We're not handling errors. Just logging into the console.\n       console.log(error);\n       return false;\n    }\n }\n\n  async function deleteid(id){\n    try {\n\n      const response = await axios.delete('http://localhost:5000/users/'.concat(id));\n      return response.data;\n    }\n    catch (error){\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n function updateList(person) {\n  makePostCall(person).then( result => {\n  if (result)\n     setCharacters([...characters, person] );\n  });\n}\n\n\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  )\n}\n\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}