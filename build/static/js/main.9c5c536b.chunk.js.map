{"version":3,"sources":["pages/Dashboard/index.jsx","theme.js","pages/Login/index.jsx","pages/Home/index.jsx","components/Navbar/index.jsx","pages/Friends/Form.js","pages/Friends/AppTasks.js","pages/Friends/List.js","pages/Friends/ListList.js","pages/Friends/App.js","pages/Friends/index.jsx","components/Checkbox/index.jsx","components/Modal/index.jsx","components/List/index.jsx","pages/Lists/index.jsx","Routes.jsx","index.js"],"names":["Dashboard","useState","JSON","parse","localStorage","getItem","user","className","username","theme","breakpoints","space","fonts","body","heading","monospace","fontSizes","fontWeights","semiBold","bold","lineHeights","colors","text","background","primary","secondary","muted","styles","root","fontFamily","lineHeight","fontWeight","h1","color","fontSize","h2","h3","h4","h5","h6","p","a","textDecoration","cursor","m","py","pre","overflowX","code","table","width","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","img","maxWidth","Login","setUser","focusedUser","setFocusedUser","focusedName","setFocusedName","focusedPass","setFocusedPass","focusedValidatePass","setFocusedValidatePass","setUsername","name","setName","password","setPassword","passwordValidate","setPasswordValidate","clicked","setClicked","handleClick","errorMsg","setErrorMsg","handleRegisterSubmit","e","preventDefault","console","log","fetch","method","headers","stringify","res","status","json","userObj","setItem","handleLoginSubmit","id","onSubmit","style","sx","borderBottom","htmlFor","type","value","onFocus","onChange","target","onClick","LoginForm","Home","href","NavBar","click","setClick","exact","to","activeClassName","removeItem","Form","AppTasks","List","todo","handleToggle","setNewAdd","newList","currentTarget","list","newAdd","complete","ListList","listList","handleFilter","map","App","data2","setToDoList","display","setDisplay","setNewList","Display","mapped","Number","MyApp","Map","data3","setCharacters","axios","get","response","data","users_list","useEffect","fetchAll","then","result","CheckBox","label","index","confettiLevel","setLists","lists","listName","taskNum","checked","setChecked","completeTask","useCallback","confetti","particleCount","spread","origin","x","y","task_num","completed","incompleteTask","deleteTask","defaultChecked","Modal","onRequestClose","onKeyDown","event","keyCode","document","overflow","addEventListener","removeEventListener","option1","setOption1","option2","setOption2","option3","setOption3","options","title","label1","label2","label3","submitList","submitTask","newLists","justifyContent","marginTop","listname","date","Date","now","toISOString","description","priority","slideVerticalAnimation","open","rotateX","opacity","transition","duration","mass","close","transitionEnd","slideHorizontalAnimation","left","right","height","isOpen","toggleDropdown","isModalOpen","setModalIsOpen","isHovering","setIsHovering","toggleModal","deleteList","onMouseEnter","onMouseLeave","alignItems","minWidth","borderRadius","boxShadow","border","paddingY","paddingX","transform","marginRight","marginLeft","motion","div","initial","animate","variants","tasks","item","Lists","setConfettiLevel","getLists","defaultValue","flexDirection","i","length","Routes","loading","setLoading","loggedIn","setLoggedIn","PrivateRoute","path","component","Friends","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9c5c536b.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Dashboard = () => {\r\n  const [user] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <h1>{user?.username}'s Dashboard</h1>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","export const theme = {\r\n  breakpoints: [\r\n    '640px',\r\n    '768px',\r\n    '1024px',\r\n    '1280px',\r\n    '1600px',\r\n    '2100px'\r\n  ],\r\n  space: [\r\n    0,\r\n    4,\r\n    8,\r\n    16,\r\n    32,\r\n    64,\r\n    128,\r\n    256,\r\n    512\r\n  ],\r\n  fonts: {\r\n    body: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\r\n    heading: 'inherit',\r\n    monospace: 'Menlo, monospace'\r\n  },\r\n  fontSizes: [\r\n    12,\r\n    14,\r\n    16,\r\n    20,\r\n    24,\r\n    32,\r\n    48,\r\n    64,\r\n    96\r\n  ],\r\n  fontWeights: {\r\n    body: 400,\r\n    heading: 700,\r\n    semiBold: 500,\r\n    bold: 700\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.125\r\n  },\r\n  colors: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    primary: '#520101',\r\n    secondary: '#ffc7e0',\r\n    muted: '#DED6CD',\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      lineHeight: 'body',\r\n      fontWeight: 'body'\r\n    },\r\n    h1: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 5\r\n    },\r\n    h2: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 4\r\n    },\r\n    h3: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 3\r\n    },\r\n    h4: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 2\r\n    },\r\n    h5: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 1\r\n    },\r\n    h6: {\r\n      color: 'text',\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 0\r\n    },\r\n    p: {\r\n      color: 'text',\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n      lineHeight: 'body'\r\n    },\r\n    a: {\r\n      color: 'text',\r\n      textDecoration: 'none',\r\n      cursor: 'pointer',\r\n      m: 15,\r\n      py: '5px'\r\n    },\r\n    pre: {\r\n      fontFamily: 'monospace',\r\n      overflowX: 'auto',\r\n      code: {\r\n        color: 'inherit'\r\n      }\r\n    },\r\n    code: {\r\n      fontFamily: 'monospace',\r\n      fontSize: 'inherit'\r\n    },\r\n    table: {\r\n      width: '100%',\r\n      borderCollapse: 'separate',\r\n      borderSpacing: 0\r\n    },\r\n    th: {\r\n      textAlign: 'left',\r\n      borderBottomStyle: 'solid'\r\n    },\r\n    td: {\r\n      textAlign: 'left',\r\n      borderBottomStyle: 'solid'\r\n    },\r\n    img: {\r\n      maxWidth: '100%'\r\n    }\r\n  }\r\n}","import { Flex } from 'theme-ui'\r\nimport React, { useState } from 'react'\r\nimport * as FAicons from 'react-icons/fa'\r\nimport './login.scss'\r\nimport { theme } from '../../theme'\r\nimport { ThemeProvider } from '@theme-ui/core'\r\n\r\nconst Login = ({user, setUser}) => {\r\n\r\n  // UI animation handling states\r\n  const [focusedUser, setFocusedUser] = useState(false)\r\n  const [focusedName, setFocusedName] = useState(false)\r\n  const [focusedPass, setFocusedPass] = useState(false)\r\n  const [focusedValidatePass, setFocusedValidatePass] = useState(false)\r\n\r\n  // states keeping track of user entered data\r\n  const [username, setUsername] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordValidate, setPasswordValidate] = useState('')\r\n\r\n  const validation = (e) => {\r\n    e.preventDefault();\r\n    setPasswordValidate(e.target.value);\r\n    if (e.target.value !== password) {\r\n      setErrorMsg('Passwords do not match')\r\n    } else {\r\n      setErrorMsg('')\r\n    }\r\n  }\r\n\r\n  const [clicked, setClicked] = useState(false);\r\n  const handleClick = () => {\r\n    setFocusedUser(false);\r\n    setFocusedName(false);\r\n    setFocusedValidatePass(false);\r\n    setFocusedPass(false);\r\n    setPassword('');\r\n    setUsername('');\r\n    setName('');\r\n    setPasswordValidate('');\r\n    setClicked(clicked => !clicked);\r\n  }\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const body = {\r\n      name,\r\n      username,\r\n      password,\r\n    };\r\n    // localStorage.setItem('user', JSON.stringify(body))\r\n    console.log(body)\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n      console.log(res)\r\n      if (res.status === 201) {\r\n        const userObj = await res.json();\r\n        await localStorage.setItem('user', JSON.stringify(userObj))\r\n        setUser(userObj)\r\n      } else {\r\n        setErrorMsg(res.text());\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      username,\r\n      password,\r\n    };\r\n    try {\r\n      const res = await fetch('http://localhost:5000/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n      if (res.status === 200) {\r\n        const userObj = await res.json();\r\n        await localStorage.setItem('user', JSON.stringify(userObj))\r\n        setUser(userObj)\r\n      } else {\r\n        setErrorMsg('Incorrect username or password. Try again!');\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      setErrorMsg('Incorrect username or password. Try again!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"LoginPage\">\r\n      {console.log(user)}\r\n      <div className=\"container\">\r\n        <Flex className={clicked ? \"login-content flip\" : \"login-content unflip\"}>\r\n          <form onSubmit={handleLoginSubmit}>\r\n          {errorMsg ? <p style={{ color: 'red' }}>{errorMsg}</p> : null}\r\n            <h2 className=\"title\">Welcome</h2>\r\n              <div className={focusedUser ? \"input-div one focus\" : \"input-div one\"}\r\n                sx={{borderBottom: '1px solid', color: 'text'}}\r\n                >\r\n                <div className=\"i\">\r\n                  <FAicons.FaUser className=\"fas fa-user\" sx={{color: 'text'}}></FAicons.FaUser>\r\n                </div>\r\n                <div className=\"input-container\"> \r\n                    <h5>Username</h5>\r\n                    <label htmlFor=\"username\">\r\n                      <input \r\n                        type=\"text\" \r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        className=\"input\" \r\n                        value={username}\r\n                        onFocus={() => setFocusedUser(true)}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n              <div className={focusedPass ? \"input-div pass focus\" : \"input-div pass\"}\r\n                sx={{borderBottom: '1px solid', color: 'text'}}\r\n                >\r\n                <div className=\"i\"> \r\n                  <FAicons.FaLock className=\"fas fa-lock\" sx={{color: 'text'}}></FAicons.FaLock>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <h5>Password</h5>\r\n                    <label htmlFor=\"password\">\r\n                      <input \r\n                        type=\"password\" \r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        className=\"input\"\r\n                        value={password}\r\n                        onFocus={() => setFocusedPass(true)}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n              <button \r\n                type=\"submit\" \r\n                className=\"btn\" \r\n              >\r\n                Sign In\r\n              </button>\r\n              <p>New Here?</p>\r\n              <button className=\"btn\" type=\"button\" onClick={handleClick} >\r\n                 Sign Up\r\n              </button>\r\n            </form>\r\n        </Flex>\r\n        <Flex className={clicked ? \"signup login-content unflip\" : \"signup login-content flip\"}>\r\n          <form onSubmit={handleRegisterSubmit}>\r\n          {errorMsg ? <p style={{ color: 'red' }}>{errorMsg}</p> : null}\r\n            <h2 className=\"title\">Welcome</h2>\r\n            <div className={focusedName ? \"input-div one focus\" : \"input-div one\"}\r\n                sx={{borderBottom: '1px solid', color: 'text'}}\r\n                >\r\n                <div className=\"i\">\r\n                  <FAicons.FaUser className=\"fas fa-user\" sx={{color: 'text'}}></FAicons.FaUser>\r\n                </div>\r\n                <div className=\"input-container\"> \r\n                    <h5>Name</h5>\r\n                    <label htmlFor=\"name\">\r\n                      <input \r\n                        type=\"text\" \r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"input\" \r\n                        value={name}\r\n                        onFocus={() => setFocusedName(true)}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n            <div className={focusedUser ? \"input-div one focus\" : \"input-div one\"}\r\n                sx={{borderBottom: '1px solid', color: 'text'}}\r\n                >\r\n                <div className=\"i\">\r\n                  <FAicons.FaUser className=\"fas fa-user\" sx={{color: 'text'}}></FAicons.FaUser>\r\n                </div>\r\n                <div className=\"input-container\"> \r\n                    <h5>Username</h5>\r\n                    <label htmlFor=\"username\">\r\n                      <input \r\n                        type=\"text\" \r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        className=\"input\" \r\n                        value={username}\r\n                        onFocus={() => setFocusedUser(true)}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n              <div className={focusedPass ? \"input-div pass focus\" : \"input-div pass\"}>\r\n                <div className=\"i\"> \r\n                  <FAicons.FaLock className=\"fas fa-lock\" sx={{color: 'text'}}></FAicons.FaLock>\r\n                </div>\r\n                <div className=\"div\">\r\n                    <h5>Password</h5>\r\n                    <label htmlFor=\"password\">\r\n                      <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\" \r\n                        className=\"input\"\r\n                        value={password}\r\n                        onFocus={() => setFocusedPass(true)}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n              <div className={focusedValidatePass ? \"input-div pass focus\" : \"input-div pass\"}>\r\n                <div className=\"i\"> \r\n                  <FAicons.FaLock className=\"fas fa-lock\" sx={{color: 'text'}}></FAicons.FaLock>\r\n                </div>\r\n                <div className=\"div\">\r\n                    <h5>Confirm Password</h5>\r\n                    <label htmlFor=\"password\">\r\n                      <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\" \r\n                        className=\"input\"\r\n                        value={passwordValidate}\r\n                        onFocus={() => setFocusedValidatePass(true)}\r\n                        onChange={validation}\r\n                      />\r\n                    </label>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn\">\r\n                Sign Up\r\n              </button>\r\n              <p>Already a Member?</p>\r\n              <button onClick={handleClick} type=\"button\" className=\"btn\">\r\n                Sign In\r\n              </button>\r\n            </form>\r\n        </Flex>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginForm = ({user, setUser}) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Login user={user} setUser={setUser} />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport \"./home.css\";\r\n\r\nfunction Home({ user, setUser }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"feature-grid-container grid grid--columns\">\r\n        <div className=\"feature-grid-text\">\r\n          <h2 className=\"fs-700 uppercase text-compressed\">\r\n            Are you ready for <span className=\"text-primary\">TODOLOO?</span>\r\n            <br />\r\n            BECOME ADDICTED TO BEING PRODUCTIVE.\r\n          </h2>\r\n          <p>\r\n            TODOLOO maximizes your production by using{\" \"}\r\n            <strong>game changing</strong> dopamine hits and competition with\r\n            your \"friends\"\r\n          </p>\r\n        </div>\r\n        <div className=\"grid feature-grid\">\r\n          <a href=\"/login\">Login</a>\r\n          <a href=\"/login\">List it</a>\r\n          <a href=\"/login\">TODOLOOOOOO</a>\r\n          <a href=\"/login\">Sign Up</a>\r\n          <a href=\"/login\">plz join</a>\r\n          <a href=\"/login\" aria-label=\"Dex liquidity oracle\">\r\n            GET ORGANIZED NOW!!!!!!!!!\r\n          </a>\r\n          <a href=\"/login\" aria-label=\"Liquidity difference force multiplier\">\r\n            u know u wanna\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navbar.scss\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\n\r\nfunction NavBar({ user, setUser }) {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    setUser(null);\r\n  };\r\n\r\n  const handleClick = () => setClick(!click);\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <NavLink exact to=\"/\" className=\"nav-logo\">\r\n            TODOLOO\r\n          </NavLink>\r\n\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            {!user && (\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  exact\r\n                  to=\"/\"\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-links\"\r\n                  onClick={handleClick}\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n            {!user && (\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  exact\r\n                  to=\"/login\"\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-links\"\r\n                  onClick={handleClick}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n            {user && (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/dashboard\"\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-links\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    Dashboard\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/lists\"\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-links\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    Lists\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/friends\"\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-links\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    Friends\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/login\"\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-links\"\r\n                    onClick={logout}\r\n                  >\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n          <div className=\"nav-icon\" onClick={handleClick}>\r\n            {click ? <FaTimes /> : <FaBars />}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useState} from 'react';\r\n\r\nfunction Form(props) {\r\n  const tasks = []\r\n  const [person, setPerson] = useState(\r\n     {\r\n        name: '',\r\n        job: '',\r\n     }\r\n  );\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"job\")\r\n      setPerson(\r\n         {name: person['name'], job: value}\r\n      );\r\n    else\r\n       setPerson(\r\n         {name: value, job: person['job']}\r\n       );\r\n  }\r\n\r\n  function submitForm() {\r\n    props.handleSubmit(person);\r\n    setPerson({name: '', job: '', id: ''});\r\n    tasks.push(person)\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        {tasks}\r\n      </div> */}\r\n      <form>\r\n        <label htmlFor=\"Task\">Task</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"task\"\r\n          id=\"name\"\r\n          value={person.name}\r\n          onChange={handleChange} />\r\n        <label htmlFor=\"Description\">Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={person.job}\r\n          onChange={handleChange} />\r\n          <input type=\"button\" className = \"btn\" value=\"Add Task\" onClick={submitForm} />\r\n          \r\n      </form>\r\n    </div>\r\n);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\n//mock data\r\nimport data from \"./data.json\";\r\n//components\r\nimport TasksList from \"./TasksList\";\r\nimport TasksForm from './TasksForm';\r\n\r\nfunction AppTasks() {\r\n  \r\n  const [ toDoList, setToDoList ] = useState(data);\r\n\r\n  const handleToggle = (id) => {\r\n    let mapped = toDoList.map(task => {\r\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\r\n    });\r\n    setToDoList(mapped);\r\n  }\r\n\r\n  const handleFilter = () => {\r\n    let filtered = toDoList.filter(task => {\r\n      return !task.complete;\r\n    });\r\n    setToDoList(filtered);\r\n  }\r\n\r\n  const addTask = (userInput ) => {\r\n    let copy = [...toDoList];\r\n    copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\r\n    setToDoList(copy);\r\n  }\r\n\r\n  const TasksList = ({tasksList, handleToggle, handleFilter}) => {\r\n    console.log(\"3 TasksList\")\r\n    return (\r\n        <div>\r\n            {tasksList.map(todo => {\r\n                return (\r\n                    <Tasks todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n                )\r\n            })}\r\n            <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Tasks = ({todo, handleToggle}) => {\r\n\r\n  function clicked(e){\r\n      handleClick(e)\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n      e.preventDefault()\r\n      handleToggle(e.currentTarget.id)\r\n  }\r\n  return (\r\n      <div id={todo.id} list = {todo.list} key={todo.id + todo.name} name=\"todo\" value={todo.id} onClick={clicked} className={todo.complete ? \"todo strike\" : \"todo\"}>\r\n          {todo.name}\r\n      </div>\r\n  );\r\n};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <TasksList/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppTasks;\r\n","import React, {useState, useEffect, Fragment} from 'react';\r\nimport AppTasks from './AppTasks'\r\nimport App from './App'\r\nimport listList from './App'\r\nimport data3 from './data3'\r\nimport ListList from './ListList'\r\n\r\n\r\n// return (\r\n//     <div className = \"ListList\">\r\n//         {listList.map(todo => {\r\n//             return (\r\n//                 <List todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n//             )\r\n//         })}\r\n//         <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button>\r\n//     </div>\r\n// );\r\n\r\n\r\n//const Display = ({newList}) => {\r\n    // var name = newList.list.name\r\n    // return (\r\n    //     <div className = \"center1\">\r\n    //         {newList.name}\r\n            \r\n    //         <div className = \"body1\">\r\n    //             Stuff I Got Done \r\n    //             ////////\r\n    //             {name}\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n    // return (\r\n    //     <div className = \"center1\">\r\n    //         {newList.name}\r\n            \r\n    //         <div className = \"body1\">\r\n    //             Stuff I Got Done \r\n    //             ////////\r\n    //             {name}\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n    // var name = newList.list.name\r\n\r\n    // newList.map(todo => {\r\n    //     console.log(\"inside loop\")\r\n    //     return (\r\n    //         <div className = \"center1\">\r\n    //             {todo.name}\r\n                \r\n    //             <div className = \"body1\">\r\n    //                 Stuff I Got Done \r\n    //                 ////////\r\n    //                 {todo.name}\r\n    //             </div>\r\n    //         </div>\r\n    //     );    \r\n    // } )\r\n//}\r\n\r\n\r\nconst Display = ({newList}) => {\r\n    console.log(\"DISPLAY\")\r\n    for (const property in newList) {\r\n        console.log(`${property}: ${newList[property]}`);\r\n        if (true){\r\n            var name = newList.list.name\r\n\r\n            return (\r\n                <div className = \"center1\">\r\n                    {newList.name}\r\n                    \r\n                    <div className = \"body1\">\r\n                        <h1>TODO</h1>\r\n                        {name}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n      }\r\n    // var name = newList.list.name\r\n    \r\n    // return (\r\n    //     <div className = \"center1\">\r\n    //         {newList.name}\r\n            \r\n    //         <div className = \"body1\">\r\n    //             <h1>TODO</h1>\r\n    //             {name}\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nconst List = ({todo, handleToggle}) => {\r\n\r\n    const [newAdd, setNewAdd] = useState(false);\r\n    const [newList, setNewList] = useState(todo);\r\n    var oldEvent;\r\n    \r\n    var eternalFlag = 0\r\n\r\n    const clicked = (e) => {\r\n        handleClick(e)\r\n        setNewAdd((newAdd) => !newAdd)\r\n        // Display(e.currentTarget, newList)\r\n        // let mapped = newList.map(name => {\r\n        //     return name.complete === true ? { ...name, complete: !name.complete } : { ...name, complete: false};\r\n        //   })\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        //turn all to complete: false\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id, newList)\r\n\r\n        //when i click make all tasks uncompleted then toggle\r\n    }\r\n\r\n    return (\r\n        <div id={todo.id} list = {todo.list} key={todo.id + todo.name} name=\"todo\" value={todo.id} onClick={clicked} className={todo.complete ? \"todo strike green\" : \"todo dot\"}>\r\n            {todo.name}\r\n            {/* <span class=\"dot\"></span> */}\r\n            {/* {newAdd && <TasksList newList={newList}/>} */}\r\n            {/* {newAdd && <Display newList = {newList}/>} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport List from './List';\r\n\r\nconst ListList = ({listList, handleToggle, handleFilter}) => {\r\n    console.log(\"listList+\"  +listList)\r\n    return (\r\n        <div className = \"ListList\">\r\n            <h1 style={{color: \"turqoise\", textDecoration: \"underline\"}}>Your Friends</h1>\r\n            {listList.map(todo => {\r\n                return (\r\n                    <List todo={todo} handleToggle={handleToggle} newList ={listList}/>\r\n                )\r\n            })}\r\n            {/* <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListList;","import React, { useState } from 'react';\r\n//mock data\r\nimport data from \"./data.json\";\r\nimport data2 from \"./data2.json\";\r\nimport data3 from \"./data3.json\";\r\n\r\n//components\r\nimport ListList from \"./ListList\";\r\nimport ListForm from './ListForm';\r\nimport Circle from \"./Circle.js\";\r\n\r\nfunction App() {\r\n  \r\n const [ listList, setToDoList ] = useState(data2);\r\n const [display, setDisplay] = useState(false);\r\n const [newList, setNewList] = useState('');\r\n const [complete, setComplete] = useState(true);\r\n\r\n//   const FirstHash = new Map([[1,  \"Ollie\"]]);\r\n\r\n// const Display = (newList) => {\r\n//   console.log(\"DISPLAYU\")\r\n//   var name = newList.list.name\r\n//   console.log(\"name\"+ name)\r\n//   return (\r\n//       <div className = \"center1\">\r\n//           {newList.name}\r\n          \r\n//           <div className = \"body1\">\r\n//               Stuff I Got Done \r\n//               ////////\r\n//               {name}\r\n//           </div>\r\n//       </div>\r\n//     );\r\n//   };\r\nconst Display = ({newList, complete}) => {\r\n  console.log(\"DISPLAY\")\r\n    var name = newList.list.name\r\n    console.log(\"COmplete \" + complete)\r\n    if(complete == true){\r\n      return (\r\n          <div className = \"center1\">\r\n              {newList.name}\r\n              <div className = \"body1\">\r\n                  <h1>TODO</h1>\r\n                  {name}\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else {\r\n      return(\r\n        null\r\n      )\r\n      \r\n    }\r\n      \r\n    \r\n}\r\n  const handleToggle = (id, newList) => {\r\n    setDisplay((display) => false)\r\n\r\n    console.log(\"toggle\", newList)\r\n    var name = newList.list.name\r\n    console.log(\"toggleName\", name)\r\n\r\n    let mapped = listList.map(name => {\r\n      return name.id === Number(id) ? { ...name, complete: !name.complete } : { ...name, complete: false};\r\n    })\r\n    setToDoList(mapped);\r\n    let boolCheck = listList.map(name => {\r\n      if (name.id === Number(id)){ \r\n        newList.complete = name.complete\r\n      };\r\n    })\r\n\r\n\r\n    \r\n    setNewList(newList);\r\n    console.log(\"f/t 1\"+ display)\r\n\r\n    setDisplay((display) => true)\r\n\r\n    console.log(\"f/t 2\"+ display)\r\n    \r\n    console.log(\"newList.complete \"+ newList.complete)\r\n\r\n    ////\r\n    if (newList.complete == true){\r\n      console.log(\"made it\"+ display)\r\n      setDisplay((display) => false)\r\n    }\r\n\r\n\r\n    // Display(newList)\r\n  }\r\n\r\n\r\n  const addList = (userInput ) => {\r\n    let copy = [...listList];\r\n    copy = [...copy, { id: listList.length + 1, name: userInput, complete: false }];\r\n    setToDoList(copy);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className = \"AppCSS\">\r\n      {display && <Display newList = {newList} complete = {complete}/>}\r\n      <ListList listList={listList} handleToggle={handleToggle}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {useState, useEffect, Fragment} from 'react';\r\n\r\nimport Table from './Table';\r\nimport Form from './Form';\r\nimport axios from 'axios';\r\nimport './home.scss'\r\nimport App from './App';\r\nimport data from \"./data.json\";\r\nimport data2 from \"./data2.json\";\r\nimport data3 from \"./data3.json\";\r\nimport Circle from \"./Circle.js\";\r\n\r\nimport ListForm from './ListForm';\r\n\r\n// copy = [...copy, { \r\n//   id: toDoList.length + 1, task: userInput, complete: false }];\r\n\r\nfunction MyApp() {\r\n\r\n  const FirstHash = new Map([[1,  data2]]);\r\n  \r\n  const ToDoForm = ({ addTask }) => {\r\n\r\n    const [ userInput, setUserInput ] = useState('');\r\n    \r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTask(userInput);\r\n        setUserInput(\"\");\r\n    }\r\n\r\n    const handleSubmitList = (e) => {\r\n      e.preventDefault();\r\n      addTask(userInput);\r\n      setUserInput(\"\");\r\n  }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input class = \"rightText\" value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\r\n            <button className = \"btn2\">Submit</button>\r\n        </form>\r\n    );\r\n  };\r\n  const ToDo = ({todo, handleToggle}) => {\r\n    console.log(\"RUNIT\")\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id)\r\n        console.log(\"handleClick\")\r\n    }\r\n    \r\n\r\n    return (\r\n        <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} onClick={handleClick } className={todo.complete ? \"todo strike\" : \"todo\"}>\r\n            {todo.task}\r\n\r\n        </div>\r\n    );\r\n  };\r\n  \r\n  const ToDoList = ({toDoList, handleToggle, handleFilter}) => {\r\n    console.log(\"here \"+ Object.values(toDoList))\r\n    return (\r\n        <div className = \"\">\r\n            {/* this is how you make the list */}\r\n            {toDoList.map(todo => {\r\n                return (\r\n                    <ToDo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n                )\r\n            })}\r\n            <button className = \"btn\" style={{margin: '10px'}} onClick={handleFilter}>Clear Completed</button>\r\n        </div>\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  const [ toDoList, setToDoList ] = useState(data3);\r\n  \r\n  const [toDoList2] = [];\r\n\r\n  const handleToggle = (id) => {\r\n    let mapped = toDoList.map(task => {\r\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\r\n    });\r\n    setToDoList(mapped);\r\n  }\r\n\r\n  const handleFilter = () => {\r\n    let filtered = toDoList.filter(task => {\r\n      return !task.complete;\r\n    });\r\n    setToDoList(filtered);\r\n  }\r\n\r\n  const addTask = (userInput ) => {\r\n    let copy = [...toDoList];\r\n    copy = [...copy, { \r\n      id: toDoList.length + 1, task: userInput, complete: false }];\r\n      console.log(toDoList)\r\n      setToDoList(copy);\r\n  }\r\n\r\n\r\n\r\n  //////////\r\n  const headingStyle = {\r\n    color : 'red', backgroundColor: 'black'\r\n  }\r\n  \r\n  const [list2,setList2] = useState([\"Saab\", \"Volvo\", \"BMW\"]);\r\n  const [list1, setList1] = useState(false)\r\n\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  function removeOneCharacter (index) {\r\n    const updated = characters.filter((character, i) => {\r\n      return i !== index\r\n    });\r\n    deleteid(characters[index])\r\n    setCharacters(updated);\r\n\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchAll().then( result => {\r\n      if (result)\r\n        setCharacters(result);\r\n    });\r\n  }, [] );\r\n\r\n  async function makePostCall(person){\r\n    try {\r\n       const response = await axios.post('http://localhost:5000/users', person);\r\n       return response.data;\r\n    }\r\n    catch (error) {\r\n       console.log(error);\r\n       return false;\r\n    }\r\n  }\r\n\r\n  async function fetchAll(){\r\n    try {\r\n       const response = await axios.get('http://localhost:5000/users');\r\n       return response.data.users_list;\r\n    }\r\n    catch (error){\r\n       //We're not handling errors. Just logging into the console.\r\n       console.log(error);\r\n       return false;\r\n    }\r\n }\r\n\r\n  async function deleteid(person){\r\n    try {\r\n\r\n      const response = await axios.delete('http://localhost:5000/users/'.concat(person._id));\r\n      return response.data;\r\n    }\r\n    catch (error){\r\n      //We're not handling errors. Just logging into the console.\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n function updateList(person) {\r\n  makePostCall(person).then( result => {\r\n  if (result)\r\n     setCharacters([...characters, result] );\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nconst attempt = (props) => {\r\n  return <Fragment>\"some content\"</Fragment>;\r\n}\r\n\r\nconst foo = async function (input) {\r\n  console.log(\"madeit\")\r\n} \r\n\r\n\r\nconst NewList = () => {\r\n\r\n  return (\r\n  <div className= \"YESSIR\" style={{margin:\"20px\"}}>\r\n    HELLO\r\n    <ToDoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n    <ToDoForm addTask={addTask}/>\r\n\r\n  \r\n  </div>\r\n  )\r\n};\r\n\r\nconst NewListButton = () => {\r\n  // const { mainStore } = useStore(); commented out for the running snippet\r\n  return (\r\n    <div className= \"YESSIR\" style={{margin:\"20px\"}}>\r\n      <NewList NewList={NewList}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\nconst [showAdd, setShowAdd] = useState(false);\r\nconst [newAdd, setNewAdd] = useState(false);\r\nconst buttonname = \"hello\";\r\nconsole.log(\"HOWMANYTIMES\")\r\n  return (\r\n    <div className='rowC'>\r\n      {/* <div class=\"flex-container\">\r\n        <div>1</div>\r\n        <div>4</div>\r\n      </div> */}\r\n        \r\n\r\n        <App />\r\n        {/* <Circle/> */}\r\n        {/* <button className = \"bottomright\"\r\n\r\n          onClick={() => setNewAdd((newAdd) => !newAdd)}\r\n          icon=\"pi pi-plus\"\r\n        >\r\n          NewListButton\r\n        </button> */}\r\n\r\n        {/* {newAdd && <NewListButton />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyApp;","import { Flex } from \"@theme-ui/components\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport \"./checkbox.scss\";\r\nimport confetti from \"canvas-confetti\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst CheckBox = ({ label, index, confettiLevel, status, lists, setLists, listName, user, taskNum }) => {\r\n  const [checked, setChecked] = useState(status);\r\n\r\n  const completeTask = useCallback( async () => {\r\n    console.log(confettiLevel)\r\n    confetti({\r\n      particleCount: confettiLevel * 6,\r\n      spread: confettiLevel * 4,\r\n      origin: {\r\n        x: 0.5,\r\n        y: 0.65,\r\n      },\r\n    });\r\n    setChecked(true);\r\n    try {\r\n        const res = await fetch(`http://localhost:5000/${user.username}/lists/${listName}`, {\r\n          method: 'PATCH',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({task_num: taskNum, completed: true}),\r\n        });\r\n        console.log(res)\r\n        if (res.status === 201) {\r\n          const lists = await res.json();\r\n          setLists(lists)\r\n        } \r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n  }, [confettiLevel, listName, setLists, taskNum, user.username]);\r\n\r\n  const incompleteTask = async () => {\r\n    setChecked(false);\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/${user.username}/lists/${listName}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({task_num: taskNum, completed: false}),\r\n      });\r\n      console.log(res)\r\n      if (res.status === 201) {\r\n        const lists = await res.json();\r\n        setLists(lists)\r\n      } \r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const deleteTask = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/${user.username}/lists/${listName}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({task_num: taskNum}),\r\n      });\r\n      console.log(res)\r\n      if (res.status === 200) {\r\n        const lists = await res.json();\r\n        setLists(lists)\r\n      } \r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex>\r\n      <input\r\n        id={`cbx-${label}-${index}`}\r\n        name={`cbx-${label}-${index}`}\r\n        className=\"hidden\"\r\n        type=\"checkbox\"\r\n        defaultChecked={checked}\r\n      />\r\n      <label\r\n        onClick={!checked ? completeTask : incompleteTask}\r\n        className=\"cbx\"\r\n        htmlFor={`cbx-${label}-${index}`}\r\n      ></label>\r\n      <label\r\n        onClick={!checked ? completeTask : incompleteTask}\r\n        className=\"lbl\"\r\n        htmlFor={`cbx-${label}-${index}`}\r\n        data-content={label}\r\n      >\r\n        {label}\r\n      </label>\r\n      <FaTrashAlt onClick={deleteTask} className=\"trash\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import { Flex } from '@theme-ui/components';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './modal.scss'\r\n\r\nconst Modal = ({ onRequestClose, type, listName, lists, setLists }) => {\r\n    const [user] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\t// Use useEffect to add an event listener to the document\r\n\tuseEffect(() => {\r\n\t\tfunction onKeyDown(event) {\r\n\t\t\tif (event.keyCode === 27) {\r\n\t\t\t\t// Close the modal when the Escape key is pressed\r\n\t\t\t\tonRequestClose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Prevent scolling\r\n\t\tdocument.body.style.overflow = \"hidden\";\r\n\t\tdocument.addEventListener(\"keydown\", onKeyDown);\r\n\r\n\t\t// Clear things up when unmounting this component\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.overflow = \"visible\";\r\n\t\t\tdocument.removeEventListener(\"keydown\", onKeyDown);\r\n\t\t};\r\n\t});\r\n\r\n    const listOptions = {\r\n        title: 'New List',\r\n        label1: 'List Title',\r\n        label2: '',\r\n        label3: ''\r\n    }\r\n\r\n    const taskOptions = {\r\n        title: 'New Task',\r\n        label1: 'Task Title',\r\n        label2: 'Task Description',\r\n        label3: 'Priority Level'\r\n    }\r\n\r\n    const [option1, setOption1] = useState('');\r\n    const [option2, setOption2] = useState('');\r\n    const [option3, setOption3] = useState('');\r\n\r\n    let options = listOptions;\r\n    if (type === 'task') options = taskOptions;\r\n\r\n    const submitList = async (body) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/${user.username}/lists`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(body),\r\n            });\r\n            console.log(res)\r\n            if (res.status === 201) {\r\n              const lists = await res.json();\r\n              setLists(lists)\r\n              onRequestClose()\r\n            } \r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n    }\r\n\r\n    const submitTask = async (body) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/${user.username}/lists/${listName}`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(body),\r\n            });\r\n            console.log(res)\r\n            if (res.status === 201) {\r\n              const newLists = await res.json();\r\n              setLists(newLists)\r\n              onRequestClose()\r\n            } \r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        let body = {\r\n            listname: option1\r\n        }\r\n        if (type !== \"task\") return submitList(body);\r\n        body = {\r\n            task_num: 0,\r\n            title: option1,\r\n            date: new Date(Date.now()).toISOString(),\r\n            description: option2,\r\n            priority: option3,\r\n            completed: false\r\n        }\r\n        return submitTask(body)\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className=\"modal__backdrop\">\r\n\t\t\t<div className=\"modal__container\">\r\n\t\t\t\t<h3 className=\"modal__title\">{options.title}</h3>\r\n                <label htmlFor=\"input1\">{options.label1}</label>\r\n                <input onChange={(e) => setOption1(e.target.value)} value={option1} type=\"text\" id=\"input1\" name=\"input1\"/>\r\n                {options.label2 && \r\n                <>\r\n                    <label htmlFor=\"input2\">{options.label2}</label>\r\n                    <input onChange={(e) => setOption2(e.target.value)} value={option2} type=\"text\" id=\"input2\" name=\"input2\"/>\r\n                </>}\r\n                {options.label3 && \r\n                <>\r\n                    <label htmlFor=\"select1\">{options.label3}</label>\r\n                    <select onChange={(e) => setOption3(e.target.value)} value={option3} name=\"select1\" id=\"select1\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                    </select>\r\n                </>}\r\n                <Flex sx={{justifyContent: 'space-between', marginTop: '25px'}}>\r\n                    <button type=\"button\" onClick={onRequestClose}>\r\n                        Close\r\n                    </button>\r\n                    <button type=\"button\" onClick={onSubmit}>\r\n                        Add\r\n                    </button>\r\n                </Flex>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\nimport CheckBox from \"../Checkbox\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Box, Flex, Text } from \"@theme-ui/components\";\r\nimport Modal from \"../Modal\";\r\nimport { AiOutlineCaretDown, AiFillCaretUp } from \"react-icons/ai\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst slideVerticalAnimation = {\r\n  open: {\r\n    rotateX: 0,\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.3,\r\n      mass: 0.8,\r\n      type: \"spring\",\r\n    },\r\n    display: \"block\",\r\n  },\r\n  close: {\r\n    rotateX: -15,\r\n    y: -320,\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.3,\r\n    },\r\n    transitionEnd: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst slideHorizontalAnimation = {\r\n  left: {\r\n    x: 0,\r\n    transition: {\r\n      duration: 0.3,\r\n    },\r\n  },\r\n  right: {\r\n    x: -250,\r\n    transition: {\r\n      duration: 0.3,\r\n    },\r\n  },\r\n};\r\n\r\nconst List = ({ height, list, confettiLevel, lists, setLists, user }) => {\r\n  const [isOpen, toggleDropdown] = useState(false);\r\n  const [isModalOpen, setModalIsOpen] = useState(false);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!isModalOpen);\r\n  };\r\n\r\n  const deleteList = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/${user.username}/lists`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({listname: list.name}),\r\n      });\r\n      console.log(res)\r\n      if (res.status === 200) {\r\n        const lists = await res.json();\r\n        setLists(lists)\r\n      } \r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onMouseEnter={() => setIsHovering(true)} onMouseLeave={() => setIsHovering(false)}>\r\n      {isModalOpen && <Modal type=\"task\" onRequestClose={toggleModal} listName={list.name} lists={lists} setLists={setLists} />}\r\n      <Flex\r\n        sx={{\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          width: \"50vw\",\r\n          minWidth: \"360px\",\r\n          borderRadius: \"5px\",\r\n          boxShadow: \"4px 4px 5px 0px rgba(0,0,0,0.4)\",\r\n          border: \"1px solid rgba(0,0,0,0.2)\",\r\n          paddingY: 3,\r\n          paddingX: 4,\r\n          marginTop: 4,\r\n          \"&:hover\": { transform: \"scale(1.02)\" },\r\n        }}\r\n      >\r\n        <button onClick={toggleModal}>+</button>\r\n        <Text\r\n          sx={{\r\n            marginRight: \"auto\",\r\n            marginLeft: \"1.5rem\",\r\n            fontSize: \"1.5rem\",\r\n            fontWeight: \"bold\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => toggleDropdown((isOpen) => !isOpen)}\r\n        >\r\n          {list.name}{\" \"}\r\n        </Text>\r\n        <Flex>\r\n          {!isOpen ? (\r\n            <AiOutlineCaretDown\r\n              className=\"icon\"\r\n              onClick={() => toggleDropdown((isOpen) => !isOpen)}\r\n            />\r\n          ) : (\r\n            <AiFillCaretUp\r\n              className=\"icon\"\r\n              onClick={() => toggleDropdown((isOpen) => !isOpen)}\r\n            />\r\n          )}\r\n          <Box sx={{marginLeft: '20px', marginRight: '-10px'}}>\r\n            {isHovering && <FaTrashAlt onClick={deleteList} className=\"trash\" />}\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n      <motion.div\r\n        className=\"dropdown-container\"\r\n        initial=\"close\"\r\n        animate={isOpen ? \"open\" : \"close\"}\r\n        variants={slideVerticalAnimation}\r\n      >\r\n        <motion.div\r\n          className=\"dropdown\"\r\n          initial=\"left\"\r\n          animate={\"left\"}\r\n          variants={slideHorizontalAnimation}\r\n        >\r\n          <motion.div className=\"menu menu-categories\">\r\n            <ul className=\"item-list\">\r\n              {list.tasks.map((item, index) => (\r\n                <li key={index} className=\"item\">\r\n                  <CheckBox\r\n                    user={user}\r\n                    taskNum={index}\r\n                    listName={list.name}\r\n                    confettiLevel={confettiLevel}\r\n                    label={item.title}\r\n                    index={index}\r\n                    status={item.completed}\r\n                    lists={lists}\r\n                    setLists={setLists}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Lists.scss\";\r\nimport List from \"../../components/List\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { Box, Flex, Slider, Text } from \"@theme-ui/components\";\r\nimport { useLists } from \"../../utils/hooks\";\r\n\r\nconst Lists = () => {\r\n  const [user] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const [isModalOpen, setModalIsOpen] = useState(false);\r\n  const [confettiLevel, setConfettiLevel] = useState(25);\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/${user.username}/lists`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      console.log(res)\r\n      if (res.status === 200) {\r\n        const lists = await res.json();\r\n        console.log(lists)\r\n        return setLists(lists);\r\n      } \r\n    } catch (e) {\r\n      console.log(e)\r\n      return \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLists()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"110vh\" }} className=\"container\">\r\n      {isModalOpen && <Modal type=\"list\" onRequestClose={toggleModal} lists={lists} setLists={setLists}/>}\r\n      <Flex\r\n        sx={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          width: \"100%\",\r\n          paddingX: \"4rem\",\r\n        }}\r\n      >\r\n        <h1>{user.username}'s Lists</h1>\r\n        <Box sx={{ width: \"40vw\" }}>\r\n          <Text>Confetti level</Text>\r\n          <Slider\r\n            sx={{ color: \"#815bcc\", background: \"#682ede\" }}\r\n            onChange={(e) => setConfettiLevel(e.target.value)}\r\n            defaultValue={25}\r\n          />\r\n        </Box>\r\n        <button onClick={toggleModal}>New List</button>\r\n      </Flex>\r\n      <Flex\r\n        sx={{\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n        className=\"wrapper\"\r\n      >\r\n        {console.log(lists)}\r\n        {lists?.map((list, i) => (\r\n          <List\r\n            user={user}\r\n            key={list.name + i}\r\n            height={(list.length + 1) * 30}\r\n            list={list}\r\n            confettiLevel={confettiLevel > 95 ? 200 : confettiLevel}\r\n            lists={lists} setLists={setLists}\r\n          />\r\n        ))}\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport LoginForm from \"./pages/Login\";\r\nimport MyApp from \"./pages/Home\";\r\nimport NavBar from './components/Navbar'\r\nimport Friends from \"./pages/Friends\";\r\nimport Lists from \"./pages/Lists\";\r\n\r\nconst Routes = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n  const PrivateRoute = ({ path, component }) => {\r\n    if (loading) return <div>Loading...</div>;\r\n    if (loggedIn) return <Route path={path} component={component} />;\r\n    return <Redirect to=\"/login\" />;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n        setLoading(false);\r\n        setLoggedIn(true);\r\n      } else {\r\n        setLoading(false);\r\n        setLoggedIn(false);\r\n      }\r\n  }, [user]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"pageContainer\">\r\n        <NavBar user={user} setUser={setUser} />\r\n        <div className=\"contentWrap\">\r\n          <Switch>\r\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute path=\"/friends\" component={Friends} />\r\n            <PrivateRoute path=\"/lists\" component={Lists} />\r\n            <Route exact path=\"/login\">\r\n              {user ? (\r\n                <Redirect to=\"/dashboard\" />\r\n              ) : (\r\n                <LoginForm user={user} setUser={setUser} />\r\n              )}\r\n            </Route>\r\n            <Route exact path=\"/\" >\r\n              <MyApp user={user} setUser={setUser} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Routes from './Routes';\r\n\r\nReactDOM.render(\r\n    <Routes />\r\n, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}